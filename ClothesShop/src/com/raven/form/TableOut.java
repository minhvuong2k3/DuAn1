/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;

import com.raven.DAO.CTHDXuatDAO;
import com.raven.DAO.HDXuatDAO;
import com.raven.DAO.SanPhamDAO;
import com.raven.model.CTHDXuat;
import com.raven.model.HDXuat;
import com.raven.model.SanPham;
import com.raven.swing.scrollbar.ScrollBarCustom;
import com.raven.utils.XDialog;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AD MIN
 */
public class TableOut extends javax.swing.JPanel {

    HDXuatDAO dao = new HDXuatDAO();
    CTHDXuatDAO ctdao = new CTHDXuatDAO();
    SanPhamDAO spdao = new SanPhamDAO();
    int indexHD;
    int indexCT;
    static JComboBox cbo = new JComboBox();

    public TableOut() {
        initComponents();
        setLayout();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scroll = new javax.swing.JScrollPane();
        tblHDXuat = new com.raven.swing.table.Table();
        roundPanel1 = new com.raven.swing.RoundPanel();
        scroll1 = new javax.swing.JScrollPane();
        roundPanel2 = new com.raven.swing.RoundPanel();
        lblTenNCC = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblSoPhieu = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblMaNV = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblNgayNhap = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel31 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        scroll2 = new javax.swing.JScrollPane();
        tblCTHDXuat = new com.raven.swing.table.Table();

        setBackground(new java.awt.Color(255, 255, 255));

        tblHDXuat.setBackground(new java.awt.Color(255, 255, 255));
        tblHDXuat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SoPhieu", "NgayXuat", "KhachHang", "NhanVien"
            }
        ));
        tblHDXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDXuatMouseClicked(evt);
            }
        });
        scroll.setViewportView(tblHDXuat);

        roundPanel1.setBackground(new java.awt.Color(255, 255, 255));

        scroll1.setBackground(new java.awt.Color(255, 255, 255));
        scroll1.setBorder(null);

        roundPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lblTenNCC.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTenNCC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenNCC.setText("Khach Hang");

        jLabel2.setText("Invoice No :");

        lblSoPhieu.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSoPhieu.setText("HD041409");

        jLabel7.setText("Employe No :");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblMaNV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMaNV.setText("Cus123");

        jLabel9.setText("Date :");

        lblNgayNhap.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNgayNhap.setText("25/11/2020");

        jLabel31.setText("Total");

        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setText("$999.99");

        tblCTHDXuat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Qty", "Price", "Sale", "Total"
            }
        ));
        tblCTHDXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTHDXuatMouseClicked(evt);
            }
        });
        scroll2.setViewportView(tblCTHDXuat);

        javax.swing.GroupLayout roundPanel2Layout = new javax.swing.GroupLayout(roundPanel2);
        roundPanel2.setLayout(roundPanel2Layout);
        roundPanel2Layout.setHorizontalGroup(
            roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(scroll2, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                    .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(roundPanel2Layout.createSequentialGroup()
                            .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(roundPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblSoPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(roundPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblMaNV)))
                            .addGap(14, 14, 14)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9)
                            .addGap(29, 29, 29)
                            .addComponent(lblNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(roundPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel31)
                            .addGap(209, 209, 209)
                            .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblTenNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator4))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        roundPanel2Layout.setVerticalGroup(
            roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTenNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(roundPanel2Layout.createSequentialGroup()
                            .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(lblSoPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(lblMaNV)))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(lblNgayNhap)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(lblTotal))
                .addGap(154, 154, 154))
        );

        scroll1.setViewportView(roundPanel2);

        javax.swing.GroupLayout roundPanel1Layout = new javax.swing.GroupLayout(roundPanel1);
        roundPanel1.setLayout(roundPanel1Layout);
        roundPanel1Layout.setHorizontalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
        );
        roundPanel1Layout.setVerticalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblHDXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDXuatMouseClicked
        if (evt.getClickCount() == 2) {
            this.indexHD = tblHDXuat.rowAtPoint(evt.getPoint());
            if (this.indexHD >= 0) {
                this.editHD();
            }
        }
    }//GEN-LAST:event_tblHDXuatMouseClicked

    private void tblCTHDXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTHDXuatMouseClicked
        // TODO add your handling code here:
//        if (evt.getClickCount() == 2) {
//            this.indexCT = tblCTHDNhap.rowAtPoint(evt.getPoint());
//            if (this.indexCT >= 0) {
//                this.editCT();
//            }
//        }
    }//GEN-LAST:event_tblCTHDXuatMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblNgayNhap;
    private javax.swing.JLabel lblSoPhieu;
    private javax.swing.JLabel lblTenNCC;
    private javax.swing.JLabel lblTotal;
    private com.raven.swing.RoundPanel roundPanel1;
    private com.raven.swing.RoundPanel roundPanel2;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JScrollPane scroll1;
    private javax.swing.JScrollPane scroll2;
    private com.raven.swing.table.Table tblCTHDXuat;
    private com.raven.swing.table.Table tblHDXuat;
    // End of variables declaration//GEN-END:variables

    public void init() {
        tblHDXuat.setDefaultEditor(Object.class, null);
        tblCTHDXuat.setDefaultEditor(Object.class, null);
        loadHD();
        DefaultComboBoxModel model = (DefaultComboBoxModel)cbo.getModel();
        model.addElement("0");
        model.addElement("1");
        model.addElement("2");
        cbo.addItemListener(new ItemListener(){
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(cbo.getSelectedIndex()==1)
                    loadHD2Date(ManageInvoice.date1, ManageInvoice.date2);
                else if(cbo.getSelectedIndex()==2)
                    loadHD1Date(ManageInvoice.date1);
            }
        });
    }

    /**
     * Ham load tat ca hoa don len tbl
     */
    public void loadHD2Date(String date1, String date2){
        DefaultTableModel model = (DefaultTableModel) tblHDXuat.getModel();
        model.setRowCount(0);
        try {
            List<HDXuat> list = dao.select2date(date1, date2);
            for (HDXuat hd : list) {
                Object[] row = {
                    hd.getSoPhieu(),
                    hd.getNgayXuat(),
                    hd.getMaKH(),
                    hd.getMaNV()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            XDialog.alert(this, "Error data query!");
            e.printStackTrace();
        }
    }
    
    public void loadHD1Date(String date){
        DefaultTableModel model = (DefaultTableModel) tblHDXuat.getModel();
        model.setRowCount(0);
        try {
            List<HDXuat> list = dao.select1date(date);
            for (HDXuat hd : list) {
                Object[] row = {
                    hd.getSoPhieu(),
                    hd.getNgayXuat(),
                    hd.getMaKH(),
                    hd.getMaNV()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            XDialog.alert(this, "Error data query!");
            e.printStackTrace();
        }
    }
    
    private void loadHD() {
        DefaultTableModel model = (DefaultTableModel) tblHDXuat.getModel();
        model.setRowCount(0);
        try {
            List<HDXuat> list = dao.select();
            for (HDXuat hd : list) {
                Object[] row = {
                    hd.getSoPhieu(),
                    hd.getNgayXuat(),
                    hd.getMaKH(),
                    hd.getMaNV()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            XDialog.alert(this, "Error data query!");
            e.printStackTrace();
        }
    }

    /**
     * Ham load tat ca sp nam trong 1 hoa don
     * @param soPhieu la soPhieu trong hoa don
     */
    private void loadCT(String soPhieu) {
        DefaultTableModel model = (DefaultTableModel) tblCTHDXuat.getModel();
        model.setRowCount(0);
        try {
            List<CTHDXuat> list = ctdao.selectListById(String.valueOf(soPhieu));
            for (CTHDXuat ct : list) {
                SanPham sp = spdao.selectById(ct.getMaSP());
                Object[] row = {
                    ct.getMaSP(),
                    ct.getSoLuong(),
                    sp.getGiaBan(),
                    ct.getGiamGia(),
                    ct.getSoLuong() * sp.getGiaBan()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * Ham tinh tong tien trong hoa don
     * @param model la hoa don can tinh
     * @return tong tien trong hd
     */
//    public int getTotal(HDNhap model) {
//        List<CTHDXuat> list = ctdao.selectListById(String.valueOf(model.getSoPhieu()));
//        int sum = 0;
//        for (CTHDXuat ct : list) {
//            sum += ct.getGiaNhap();
//        }
//        return sum;
//    }

    /**
     * Xu ly khi chon hd trong bang hoa don
     */
    private void editHD() {
        try {
            Integer soPhieu = (Integer) tblHDXuat.getValueAt(this.indexHD, 0);
            HDXuat model = dao.selectById(String.valueOf(soPhieu));
            if (model != null) {
                // Load tbl CT
                setModel(model); // Hien thong tin hao don
                loadCT(String.valueOf(soPhieu)); // Load cac sp trong hoa don 
            }
        } catch (Exception e) {
            XDialog.alert(this, "Error data query!");
            e.printStackTrace();
        }
    }

    /**
     * Xy ly khi chon san pham trong bang ct hoa don
     */
//    private void editCT() {
//        try {
//            String soPhieu = (String) tblHDNhap.getValueAt(this.indexHD, 0);
//            String maSP = (String) tblCTHDNhap.getValueAt(this.indexCT, 0);
//            CTHDNhap model = ctdao.selectById(soPhieu, maSP);
//            if(model != null) {
//                // Code
//            }
//        } catch (Exception e) {
//        }
//    }
    
    /**
     * Hien thong tin hoa don len form
     * @param model la hoa don can show
     */
    private void setModel(HDXuat model) {
        lblTenNCC.setText(model.getMaKH());
        lblSoPhieu.setText(model.getSoPhieu()+"");
        lblNgayNhap.setText(model.getNgayXuat());
        lblMaNV.setText(model.getMaNV());
        lblTotal.setText(model.getThanhTien()+"");
    }
    
    /**
     * Set scrtoll
     */
    private void setLayout() {
        scroll.setBorder(null);
        scroll.setViewportBorder(null);
        scroll.getViewport().setOpaque(false);
        scroll.setVerticalScrollBar(new ScrollBarCustom());

        scroll1.setBorder(null);
        scroll1.setViewportBorder(null);
        scroll1.getViewport().setOpaque(false);
        scroll1.setVerticalScrollBar(new ScrollBarCustom());
    }
    
    public void clear() {
        DefaultTableModel model = (DefaultTableModel) tblCTHDXuat.getModel();
        model.setRowCount(0);
        DefaultTableModel model2 = (DefaultTableModel) tblHDXuat.getModel();
        model.setRowCount(0);
    }
}
