/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;

import com.raven.DAO.HDNhapDAO;
import com.raven.DAO.HDXuatDAO;
import com.raven.datechooser.EventDateChooser;
import com.raven.datechooser.SelectedAction;
import com.raven.datechooser.SelectedDate;
import com.raven.model.HDNhap;
import com.raven.model.HDXuat;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaswingdev.Notification;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AD MIN
 */
public class ManageInvoice extends javax.swing.JPanel {

    Date dateFrom = null, dateTo = null;
    static String date1 = "", date2 = "";
    boolean isImport = true;

    public ManageInvoice() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.raven.datechooser.DateChooser();
        dateChooser2 = new com.raven.datechooser.DateChooser();
        roundPanel1 = new com.raven.swing.RoundPanel();
        btnOutput = new button.Button();
        btnInput = new button.Button();
        txtFrom = new textfield.TextFieldBasic();
        btnDayFrom = new button.Button();
        txtTo = new textfield.TextFieldBasic();
        btnDayTo = new button.Button();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        button1 = new button.Button();
        jPanel1 = new javax.swing.JPanel();
        tableImport1 = new com.raven.form.TableImport();
        tableOut1 = new com.raven.form.TableOut();

        setBackground(new java.awt.Color(255, 255, 255));

        roundPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnOutput.setText("Output");
        btnOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutputActionPerformed(evt);
            }
        });

        btnInput.setText("Input");
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });

        txtFrom.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtFromCaretUpdate(evt);
            }
        });

        btnDayFrom.setText("FROM");
        btnDayFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDayFromActionPerformed(evt);
            }
        });

        txtTo.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtToCaretUpdate(evt);
            }
        });

        btnDayTo.setText("TO");
        btnDayTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDayToActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("-");

        jLabel2.setText("Filter Day");

        jLabel3.setText("Filter Type");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        button1.setText("Clear");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundPanel1Layout = new javax.swing.GroupLayout(roundPanel1);
        roundPanel1.setLayout(roundPanel1Layout);
        roundPanel1Layout.setHorizontalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDayTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138)
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel1Layout.createSequentialGroup()
                        .addComponent(btnInput, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(221, 221, 221)))
                .addContainerGap())
        );
        roundPanel1Layout.setVerticalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDayTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(536, 536, 536))
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(534, 534, 534))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());
        jPanel1.add(tableImport1, "card2");
        jPanel1.add(tableOut1, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDayToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDayToActionPerformed
        // TODO add your handling code here:
        dateChooser2.setTextRefernce(txtTo);
        dateChooser2.showPopup();
    }//GEN-LAST:event_btnDayToActionPerformed

    private void btnDayFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDayFromActionPerformed
        // TODO add your handling code here:
        dateChooser1.setTextRefernce(txtFrom);
        dateChooser1.showPopup();
    }//GEN-LAST:event_btnDayFromActionPerformed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        // TODO add your handling code here:
//        setStatus(true);
        tableImport1.setVisible(true);
        tableOut1.setVisible(false);
        isImport = true;
//        btnInput.setEnabled(true);
    }//GEN-LAST:event_btnInputActionPerformed

    private void btnOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputActionPerformed
        // TODO add your handling code here:
//        setStatus(false);
        tableImport1.setVisible(false);
        tableOut1.setVisible(true);
        isImport = false;
//        btnInput.setEnabled(false);
    }//GEN-LAST:event_btnOutputActionPerformed

    private void txtFromCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtFromCaretUpdate
        // TODO add your handling code here:
        if (!txtFrom.getText().trim().equals("")) {
            SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy");
            try {
                if (!txtTo.getText().trim().equals("")) {
                    dateTo = format.parse(txtTo.getText());
                }
                dateFrom = format.parse(txtFrom.getText());
                if (dateTo != null && dateFrom != null) {
                    if (dateTo.compareTo(dateFrom) < 0) {
                        Notification panel = new Notification(Employee_Form.fr, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "DateTo invalid! ");
                        panel.showNotification();
                    } else {
                        if (dateTo.compareTo(dateFrom) > 0) {
                            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
                            date1 = format1.format(dateFrom);
                            date2 = format1.format(dateTo);
                            TableImport.cbo.setSelectedIndex(0);
                            TableImport.cbo.setSelectedIndex(1);
                            TableOut.cbo.setSelectedIndex(0);
                            TableOut.cbo.setSelectedIndex(1);
                        } else {
                            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
                            date1 = format1.format(dateFrom);
                            date2 = format1.format(dateTo);
                            TableImport.cbo.setSelectedIndex(0);
                            TableImport.cbo.setSelectedIndex(2);
                            TableOut.cbo.setSelectedIndex(0);
                            TableOut.cbo.setSelectedIndex(2);
                        }
                    }
                }
            } catch (ParseException ex) {
                Logger.getLogger(ManageInvoice.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else
            dateFrom = null;
    }//GEN-LAST:event_txtFromCaretUpdate

    private void txtToCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtToCaretUpdate
        // TODO add your handling code here:
        if (!txtTo.getText().trim().equals("")) {
            SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy");
            try {
                if (!txtFrom.getText().trim().equals("")) {
                    dateFrom = format.parse(txtFrom.getText());
                }
                dateTo = format.parse(txtTo.getText());
                if (dateFrom != null && dateTo != null) {
                    if (dateTo.compareTo(dateFrom) < 0) {
                        Notification panel = new Notification(Employee_Form.fr, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "DateTo invalid! ");
                        panel.showNotification();
                    } else {
                        if (dateTo.compareTo(dateFrom) > 0) {
                            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
                            date1 = format1.format(dateFrom);
                            date2 = format1.format(dateTo);
                            TableImport.cbo.setSelectedIndex(0);
                            TableImport.cbo.setSelectedIndex(1);
                            TableOut.cbo.setSelectedIndex(0);
                            TableOut.cbo.setSelectedIndex(1);
                        } else {
                            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
                            date1 = format1.format(dateFrom);
                            date2 = format1.format(dateTo);
                            TableImport.cbo.setSelectedIndex(0);
                            TableImport.cbo.setSelectedIndex(2);
                            TableOut.cbo.setSelectedIndex(0);
                            TableOut.cbo.setSelectedIndex(2);
                        }
                    }
                }
            } catch (ParseException ex) {
                Logger.getLogger(ManageInvoice.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else
            dateTo = null;
    }//GEN-LAST:event_txtToCaretUpdate

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        if (isImport)
            tableImport1.clear();
        else
            tableOut1.clear();
    }//GEN-LAST:event_button1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private button.Button btnDayFrom;
    private button.Button btnDayTo;
    private button.Button btnInput;
    private button.Button btnOutput;
    private button.Button button1;
    private com.raven.datechooser.DateChooser dateChooser1;
    private com.raven.datechooser.DateChooser dateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private com.raven.swing.RoundPanel roundPanel1;
    private com.raven.form.TableImport tableImport1;
    private com.raven.form.TableOut tableOut1;
    private textfield.TextFieldBasic txtFrom;
    private textfield.TextFieldBasic txtTo;
    // End of variables declaration//GEN-END:variables

    private void init() {
        setStatus(true);
        dateChooser1.addEventDateChooser(new EventDateChooser() {
            @Override
            public void dateSelected(SelectedAction action, SelectedDate date) {
                if (action.getAction() == SelectedAction.DAY_SELECTED) {
                    dateChooser1.hidePopup();
                }
            }
        });
    }

    private void setStatus(boolean insertable) {
        btnInput.setEnabled(!insertable);
        btnOutput.setEnabled(insertable);

    }
}
